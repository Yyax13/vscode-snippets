{
	"checkHashedPass": {
		"prefix": "chp",
		"body": [
		"async function checkHashedPass(passwd, hash) {",
		"    const result = genResult();",
		"",
		"    try {",
		"        const match = await bcrypt.compare(passwd, hash);",
		"",
		"        result.success = match;",
		"        result.others = {",
		"            match: match",
		"        };",
		"",
		"    } catch (err) {",
		"        result.success = false;",
		"        result.message = `",
		"        Internal server error in checkHashedPass():",
		"        Error message: ${err.message},",
		"        Error: ${err.stack}`;",
		"        result.others = {",
		"            error: err",
		"        };",
		"",
		"        console.error(result.message);",
		"",
		"    } finally {",
		"        return result;",
		"    }",
		"};"
		],
		"description": "async function that checks a hashed pass and user input pass"
	}
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}